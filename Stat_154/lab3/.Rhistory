(solve(t(X) %*% X) %*% t(X) %*% y) / length(y)
beta <- rnorm(4)
alpha <- 0.000001
for (i in 1:5000){
beta = beta - alpha * (dMSE(beta))
}
beta
(solve(t(X) %*% X) %*% t(X) %*% y) / length(y)
beta <- rnorm(4)
alpha <- 0.00001
plotdata <- data.frame(index = 1:500, beta = rep(0,500))
for (i in 1:500){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = beta
}
for (i in 1:500){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta))
View(plotdata)
plotdata %>%
ggplot(aes(x = index, y = beta)) =
geom_point()
plotdata %>%
ggplot(aes(x = index, y = beta)) +
geom_point()
iteration <- 500
iteration <- 50000
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
iteration <- 5000
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) +
geom_point()
View(plotdata)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
response <- 'mpg'
predictors <- c('hp', 'qsec', 'wt')
M <- as.matrix(mtcars[ ,predictors])
X <- cbind(intercept = 1, M)
y <- mtcars[ ,response]
y <- as.matrix(y, ncol = 1)
test <- lm(mpg~hp+qsec+wt, data = mtcars)
test$coefficients / length(y)
MSE <- function(beta){
return(t(X %*% beta - y) %*% (X %*% beta - y) / nrow(y))
}
dMSE <- function(beta){
return(2 * (t(X) %*% X %*% beta - t(X) %*% y) / nrow(y))
}
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 5000
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) +
geom_point()
beta
(solve(t(X) %*% X) %*% t(X) %*% y) / length(y)
MSE <- function(beta){
return(t(X %*% beta - y) %*% (X %*% beta - y))
}
dMSE <- function(beta){
return(2 * (t(X) %*% X %*% beta - t(X) %*% y))
}
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 5000
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
beta
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) +
geom_point()
beta
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
dMSE(beta)
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
beta
MSE(beta)
MSE <- function(beta){
return(t(X %*% beta - y) %*% (X %*% beta - y))
}
dMSE <- function(beta){
return(2 * (t(X) %*% X %*% beta - t(X) %*% y))
}
MSE(beta)
dMSE(beta)
beta <- rnorm(4)
MSE(beta)
dMSE(beta)
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) +
geom_point()
MSE <- function(beta){
return(t(X %*% beta - y) %*% (X %*% beta - y) / nrow(X))
}
dMSE <- function(beta){
return(2 * (t(X) %*% X %*% beta - t(X) %*% y) / nrow(X))
}
MSE(beta)
dMSE(beta)
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) +
geom_point()
beta
beta_lm <- (solve(t(X) %*% X) %*% t(X) %*% y) / length(y)
(solve(t(X) %*% X) %*% t(X) %*% y) / length(y)
MSE(beta_lm)
MSE(beta)
dMSE <- function(beta){
return(2 * (t(X) %*% X %*% beta - t(X) %*% y))
}
MSE(beta)
dMSE(beta)
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) +
geom_point()
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) +
geom_point()
dMSE <- function(beta){
return(2 * (t(X) %*% X %*% beta - t(X) %*% y) / nrow(X))
}
MSE(beta)
dMSE(beta)
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) +
geom_point()
plotdata %>%
ggplot(aes(x = index, y = beta)) + theme_bw() +
geom_point(color = 'maroon')
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 5000
plotdata <- data.frame(index = 1:iteration, beta = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) + theme_bw() +
geom_point(color = 'maroon')
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 5000
plotdata <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) + theme_bw() +
geom_point(color = 'maroon')
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 5000
plotdata <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) + theme_bw() +
geom_point(color = 'maroon')
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 5000
plotdata <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) + theme_bw() +
geom_point(color = 'maroon')
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) + theme_bw() +
geom_point(color = 'maroon')
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) + theme_bw() +
geom_point(color = 'maroon')
sample(X, 100)
View(X)
sample(X, 15)
?sample.int
alpha <- 0.001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) + theme_bw() +
geom_point(color = 'maroon')
beta <- rnorm(4)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) + theme_bw() +
geom_point(color = 'maroon')
sample_frac(X, 15)
?sample_frac(X, 15)
sample_frac(X, 15)
sample(1:100,5)
sample(1:100)
sample(1:100,15)
sample_batch <- function(n, B){
return(sample(1:n,B))
}
B <- 16
alpha <- 0.00001
dMSE_mini <- function(beta){
return(2 * (t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrows(tempy))
}
beta <- rnorm(4)
for (i in 1:500){
sampleRows <- sample_batch(1:nrow(X), B)
tempX <- X[sampleRows,]
tempy <- y[sampleRows,]
beta = beta - dMSE_mini(beta)
}
for (i in 1:500){
sampleRows <- sample_batch(nrow(X), B)
tempX <- X[sampleRows,]
tempy <- y[sampleRows,]
beta = beta - dMSE_mini(beta)
}
dMSE_mini <- function(beta){
return(2 * (t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrow(tempy))
}
for (i in 1:500){
sampleRows <- sample_batch(nrow(X), B)
tempX <- X[sampleRows,]
tempy <- y[sampleRows,]
beta = beta - dMSE_mini(beta)
}
View(tempX)
beta <- matrix(rnorm(4), ncol = 1)
dMSE_mini <- function(beta){
return(2 * (t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrow(tempy))
}
for (i in 1:500){
sampleRows <- sample_batch(nrow(X), B)
tempX <- X[sampleRows,]
tempy <- y[sampleRows,]
beta = beta - dMSE_mini(beta)
}
beta <- matrix(rnorm(4), ncol = 1)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'beta'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = beta)) + theme_bw() +
geom_point(color = 'maroon')
for (i in 1:500){
sampleRows <- sample_batch(nrow(X), B)
tempX <- X[sampleRows,]
tempy <- y[sampleRows,]
beta = beta - dMSE_mini(tempX, tempy, beta)
}
dMSE_mini <- function(tempX, tempy, beta){
return(2 * (t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrow(tempy))
}
for (i in 1:500){
sampleRows <- sample_batch(nrow(X), B)
tempX <- X[sampleRows,]
tempy <- y[sampleRows,]
beta = beta - dMSE_mini(tempX, tempy, beta)
}
t(tempX) %*% tempX
t(tempX) %*% tempX %*% beta
beta <- matrix(rnorm(4), ncol = 1)
t(tempX) %*% tempX %*% beta
for (i in 1:500){
sampleRows <- sample_batch(nrow(X), B)
tempX <- X[sampleRows,]
tempy <- y[sampleRows,]
beta = beta - dMSE_mini(tempX, tempy, beta)
}
beta <- matrix(rnorm(4), ncol = 1)
dMSE_mini(beta)
dMSE_mini(beta, X, y)
tempy
sample_batch <- function(n, B){
return(sample(1:n,B))
}
B <- 16
alpha <- 0.00001
beta <- matrix(rnorm(4), ncol = 1)
dMSE_mini <- function(beta){
return(2 * (t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrow(tempy))
}
dMSE_mini(beta)
for (i in 1:500){
sampleRows <- sample_batch(nrow(X), B)
tempX <- X[sampleRows,]
tempy <- matrix(y[sampleRows,], ncol = 1)
beta = beta - dMSE_mini(beta)
}
beta
dMSE_mini(beta)
beta <- matrix(rnorm(4), ncol = 1)
dMSE_mini <- function(beta){
return(2 * (t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrow(tempy))
}
dMSE_mini(beta)
t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrow(tempy)
(t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrow(tempy)
sample_batch <- function(n, B){
return(sample(1:n,B))
}
B <- 16
alpha <- 0.00001
beta <- matrix(rnorm(4), ncol = 1)
dMSE_mini <- function(beta){
return(2 * (t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrow(tempy))
}
dMSE_mini(beta)
for (i in 1:500){
sampleRows <- sample_batch(nrow(X), B)
tempX <- X[sampleRows,]
tempy <- matrix(y[sampleRows,], ncol = 1)
beta = beta - alpha * dMSE_mini(beta)
}
beta
plotdata2 <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
dMSE_mini <- function(beta){
return(2 * (t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrow(tempy))
}
dMSE_mini(beta)
for (i in 1:500){
sampleRows <- sample_batch(nrow(X), B)
tempX <- X[sampleRows,]
tempy <- matrix(y[sampleRows,], ncol = 1)
beta = beta - alpha * dMSE_mini(beta)
plotdata2[i,'MSE'] == MSE(beta)
}
beta
plotdata2 %>%
ggplot(aes(x = index, y = MSE)) + theme_bw() +
geom_point(color = 'maroon')
View(plotdata2)
View(plotdata)
beta <- matrix(rnorm(4), ncol = 1)
alpha <- 0.00001
iteration <- 500
plotdata <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
for (i in 1:iteration){
beta = beta - alpha * (dMSE(beta))
plotdata[i,'MSE'] = MSE(beta)
}
plotdata %>%
ggplot(aes(x = index, y = MSE)) + theme_bw() +
geom_point(color = 'maroon')
View(plotdata)
B <- 16
alpha <- 0.00001
beta <- matrix(rnorm(4), ncol = 1)
plotdata2 <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
dMSE_mini <- function(beta){
return(2 * (t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrow(tempy))
}
dMSE_mini(beta)
for (i in 1:500){
sampleRows <- sample_batch(nrow(X), B)
tempX <- X[sampleRows,]
tempy <- matrix(y[sampleRows,], ncol = 1)
beta = beta - alpha * dMSE_mini(beta)
plotdata2[i,'MSE'] = MSE(beta)
}
beta
plotdata2 %>%
ggplot(aes(x = index, y = MSE)) + theme_bw() +
geom_point(color = 'maroon')
B <- 16
alpha <- 0.00001
beta <- matrix(rnorm(4), ncol = 1)
plotdata2 <- data.frame(index = 1:iteration, MSE = rep(0,iteration))
dMSE_mini <- function(beta){
return(2 * (t(tempX) %*% tempX %*% beta - t(tempX) %*% tempy) / nrow(tempy))
}
dMSE_mini(beta)
for (i in 1:500){
sampleRows <- sample_batch(nrow(X), B)
tempX <- X[sampleRows,]
tempy <- matrix(y[sampleRows,], ncol = 1)
beta = beta - alpha * dMSE_mini(beta)
plotdata2[i,'MSE'] = MSE(beta)
}
beta
plotdata2 %>%
ggplot(aes(x = index, y = MSE)) + theme_bw() +
geom_point(color = 'maroon')
install.packages("tensorflow")
install.packages("keras")
library(class)
library(tidyr)
library(tidyverse)
library(dplyr)
library(gmodels)
# The intuition is to predict a person's race by his income, educational level, degree, etc.
data <- read.csv("cps1re74.csv", sep = ' ')
data <- data[,c(-1,-2)]
data <- data %>%
mutate(race = ifelse(black==1, 1, 0)) %>%
mutate(race = ifelse(hispan == 1, 2, race))
data <- data[,c(-3,-4)]
training_data <- data[1:12000,-7]
training_label <- data[1:12000,7]
test_data <- data[12001:16177,-7]
test_label <- data[12001:16177,7]
