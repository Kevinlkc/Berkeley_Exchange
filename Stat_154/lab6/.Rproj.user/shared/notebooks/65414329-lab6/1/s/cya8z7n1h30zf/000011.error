{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"predict(ridge.mod, s = 0, newx = x[test, ], newy = y[test], exact = T)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"predict.elnet(ridge.mod, s = 0, newx = x[test, ], newy = y[test], \n    exact = T)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"NextMethod(\"predict\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"predict.glmnet(ridge.mod, s = 0, newx = x[test, ], newy = y[test], \n    exact = T)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"check_dots(object, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(paste(\"used coef.glmnet() or predict.glmnet() with `exact=TRUE` so must in addition supply original argument(s) \", \n    paste(margs, collapse = \" and \"), \" in order to safely rerun glmnet\"), \n    call. = FALSE)","line_number":0}],"message":"错误: used coef.glmnet() or predict.glmnet() with `exact=TRUE` so must in addition supply original argument(s)  x and y  in order to safely rerun glmnet\n"}