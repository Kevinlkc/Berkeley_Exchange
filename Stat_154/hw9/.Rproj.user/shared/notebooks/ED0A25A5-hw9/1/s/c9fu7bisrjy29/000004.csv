"0","find_kcv <- function(X_train, Y_train, K = 1:10, nfold = 5)"
"0","{"
"0","  # Create 5 folds"
"0","  trainingSet <- cbind(X_train, Y_train)"
"0","  trainingSet <- trainingSet %>%"
"0","    mutate(instant = 1:nrow(trainingSet), fold = 0)"
"0","  tempdata <- trainingSet"
"0","  "
"0","  for (i in 1:5){"
"0","    num = 28"
"0","    temp <-  sample_n(tempdata, num)"
"0","    tempdata <- tempdata %>%"
"0","      filter(!(instant %in% temp$instant))"
"0","    trainingSet[trainingSet$instant %in% temp$instant,] <- trainingSet %>%"
"0","      filter(instant %in% temp$instant) %>%"
"0","      mutate(fold = i)"
"0","  }"
"0","  trainingSet <- trainingSet %>% dplyr::select(-instant)"
"0","  "
"0","  accuracy = matrix(0, nrow = nfold, ncol = length(K))"
"0","  for (i in 1:nfold){"
"0","    for (k in K){"
"0","      trainingSet2 <- trainingSet %>%"
"0","        filter(fold != i)"
"0","      test <- trainingSet %>%"
"0","        filter(fold == i)"
"0","      test <- test %>%"
"0","        dplyr::select(-fold)"
"0","      pred <- pred_knn(trainingSet2[,-5], test[,-5], trainingSet2[,5], k = k)"
"0","      for (j in 1:length(pred))"
"0","      {"
"0","        if (pred[j] == test[,5]){accuracy[i,k] = accuracy[i,k] + 1}"
"0","      }"
"0","    }"
"0","  }"
"0","  return(which.max(apply(accuracy, 2, mean)))"
"0","}"
