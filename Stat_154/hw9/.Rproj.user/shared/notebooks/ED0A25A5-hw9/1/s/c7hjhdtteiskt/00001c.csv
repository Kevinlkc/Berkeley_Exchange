"0","L2norm <- function(x1, x2)"
"0","{"
"0","  return(sqrt(mean((x1-x2)^2)))"
"0","}"
"0","pred_knn <- function(train, test, label, k = 1)"
"0","{"
"0","  distance <- matrix(0, nrow = nrow(test), ncol = nrow(train))"
"0","  result = rep(label[1], nrow(test))"
"0","  for (i in 1:nrow(test))"
"0","  {"
"0","    for (j in 1:nrow(train))"
"0","    {"
"0","      distance[i,j] = L2norm(as.numeric(test[i, ]), as.numeric(train[j, ]))"
"0","    }"
"0","  }"
"0","  neighbour = matrix(0, nrow = nrow(test), ncol = k)"
"0","  for (i in 1:nrow(test))"
"0","  {"
"0","    neighbour[i,] = label[which(rank(distance[i,]) <= k)]"
"0","  }"
"0","  count = matrix(0, nrow = nrow(test), ncol = length(levels(label)))"
"0","  for (i in 1:nrow(neighbour)){"
"0","    for (j in 1:ncol(neighbour)){"
"0","      for (k in 1:length(levels(label))){"
"0","        if (neighbour[i,j] == k){"
"0","          count[i, k] = count[i, k] + 1"
"0","        }"
"0","      }"
"0","    }"
"0","  }"
"0","  return(as.factor(levels(label)[apply(count, 1, which.max)]))"
"0","}"
