---
title: "Assignment3"
author: "Kaicheng Luo"
date: "2019/10/14"
output: pdf_document
---

```{r setup, include=FALSE}
library(tidyr)
library(tidyverse)
library(dplyr)
library(ggplot2)
```

\section*{Problem 2}
```{r}
MP_enumerate = function(i, n.pairs = 15) 
{
 a = 2^((n.pairs-1):0)
 b = 2*a
 2*sapply(i-1, 
          function(x) 
            as.integer((x %% b)>=a)) - 1
}
## Darwin's data from Fisher's book
ytreat     = c(188, 96, 168, 176, 153, 
               172, 177, 163, 146, 173, 
               186, 168, 177, 184, 96)
ycontrol   = c(139, 163, 160, 160, 147, 
               149, 149, 122, 132, 144, 
               130, 144, 102, 124, 144)
difference = ytreat - ycontrol
n.pairs    = length(difference)
abs.diff   = abs(difference)
w.obs = wilcox.test(ytreat, ycontrol, paired = TRUE)$statistic
w.ran      = sapply(1:2^15, 
                    function(x){ 
                      wilcox.test(ytreat*(-MP_enumerate(x)), ycontrol*(MP_enumerate(x)), paired = TRUE)$statistic
                      }, simplify = TRUE)
pvalue     = mean(w.ran>=w.obs)

hist(w.ran, breaks = 50, col = "grey", border = NA,
     xlab = expression(hat(tau)), 
     ylab = "", yaxt = 'n', 
     main = "randomization distribution - Darwin's data")
abline(v = w.obs)
text(30, 400, 
     paste("p-value = ", round(pvalue, 3), sep = ""))
```

```{r}
# Neymanian Inference
tau_hat = mean(ytreat - ycontrol)
V_hat = sum((ytreat - ycontrol - tau_hat)^2) /n.pairs / (n.pairs-1)
print(paste("Confidence Interval = [", tau_hat - 1.96*sqrt(V_hat), ",", tau_hat + 1.96*sqrt(V_hat), "]", sep = ""))
```

```{r}
## Imbens and Rubin book: matched pair data
## television program aimed at improving reading skills for children
dataxy = c(12.9, 12.0, 54.6, 60.6,
           15.1, 12.3, 56.5, 55.5,
           16.8, 17.2, 75.2, 84.8,
           15.8, 18.9, 75.6, 101.9,
           13.9, 15.3, 55.3, 70.6,
           14.5, 16.6, 59.3, 78.4,
           17.0, 16.0, 87.0, 84.2,
           15.8, 20.1, 73.7, 108.6)
           
dataxy = matrix(dataxy, 8, 4,  byrow = TRUE)           

diffx = dataxy[, 2] - dataxy[, 1]
diffy = dataxy[, 4] - dataxy[, 3]

dataxy = cbind(dataxy, diffx, diffy)

rownames(dataxy) = 1:8
colnames(dataxy) = c("x.control", "x.treatment", 
                     "y.control", "y.treatment",
                     "diffx", "diffy")
dataxy
ytreat = dataxy[, 'y.treatment']
ycontrol = dataxy[, 'y.control']
difference = ytreat - ycontrol
n.pairs    = length(difference)
abs.diff   = abs(difference)
t.obs      = mean(difference)
t.ran      = sapply(1:2^15, 
                    function(x){ 
                      sum(MP_enumerate(x, 15)*abs.diff) 
                      })/n.pairs
pvalue     = mean(t.ran>=t.obs)

hist(t.ran, breaks = 50, col = "grey", border = NA,
     xlab = expression(hat(tau)), 
     ylab = "", yaxt = 'n', 
     main = "randomization distribution - Darwin's data")
abline(v = t.obs)
text(30, 400, 
     paste("p-value = ", round(pvalue, 3), sep = ""))

```

